var 
UForm: TclStyleForm;
btnUpdateProduct,btnDeleteProduct:TCLButton;
updateName:TCLEdit;
updateExplanation:TCLEdit;
updateQuantity:TCLEdit;
updatePrice:TCLEdit;
updateCategory_id:TCLEdit;
updateSupplier_id:TCLEdit;
getId:TCLLabel;
Qry: TClSQLiteQuery;

void UpdateProducts;
{
  try
  
    Clomosy.DBSQLiteQuery.Sql.Text = '
      UPDATE Products SET name ='+QuotedStr(updateName.Text)+',
      explanation= '+QuotedStr(updateExplanation.Text)+',
      quantity='+QuotedStr(updateQuantity.Text)+',
      price='+QuotedStr(updatePrice.Text)+',
      category_id='+QuotedStr(updateCategory_id.Text)+',
      supplier_id='+QuotedStr(updateSupplier_id.Text)+'
      WHERE id='+QuotedStr(getId.Text)+'
  ';
    Clomosy.DBSQLiteQuery.OpenOrExecute;
    ShowMessage('Updating data to the table was successful!');
    Clomosy.RunUnit('productListUnit');
    
  except
    ShowMessage('Exception Class: '+LastExceptionClassName+' Exception Message: '+LastExceptionMessage);
  }
  
}
void DatabaseConnection;
var
  TableExists: Boolean;
{
  try
    Clomosy.DBSQLiteConnect(Clomosy.AppFilesPath + 'EnvanterManagement.db3', '');

    Clomosy.DBSQLiteQuery.Sql.Text = 'SELECT name FROM sqlite_master WHERE type="table" AND name="Products"';
    Clomosy.DBSQLiteQuery.OpenOrExecute;
    
    TableExists = not Clomosy.DBSQLiteQuery.Eof;
    
    if not (TableExists)
    {
      Clomosy.DBSQLiteQuery.Sql.Text = 'CREATE TABLE Products(
        id INTEGER NOT NULL UNIQUE,
        name TEXT NOT NULL,
        explanation TEXT NOT NULL,
        quantity INTEGER NOT NULL,
        price REAL NOT NULL,
        supplier_id INTEGER NOT NULL,
        category_id INTEGER NOT NULL,
        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
        updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
        PRIMARY KEY(id AUTOINCREMENT)
      );';
      Clomosy.DBSQLiteQuery.OpenOrExecute;

    }
  except
    ShowMessage('Exception Class: '+LastExceptionClassName+' Exception Message: '+LastExceptionMessage);
    }
}
void GetProduct;
{
DatabaseConnection;
  try
  
    Qry = Clomosy.DBSQLiteQueryWith('SELECT * FROM Products WHERE id='+QuotedStr(getId.Text)+'');
    Qry.OpenOrExecute;
    
    
    if (Qry.Found)
    {
      listView1.clLoadProListViewDataFromDataset(Qry);

    }
    else
      ShowMessage('No products found.');
  except

    ShowMessage('Exception class: '+LastExceptionClassName+' Exception Message: ' + LastExceptionMessage);
}
}

void DeleteProducts;
{
  try
  
    Clomosy.DBSQLiteQuery.Sql.Text = 'DELETE FROM Products WHERE id='+QuotedStr(getId.Text)+'';
    Clomosy.DBSQLiteQuery.OpenOrExecute;

    ShowMessage('Deleting data was successful!');
    Clomosy.RunUnit('productListUnit');
    UForm.clHide;

  except
    ShowMessage('Exception Class: '+LastExceptionClassName+' Exception Message: '+LastExceptionMessage);
  }
}
void ProcNo;
{
  ShowMessage('no clicked');
}
/*
void DeleteCheck;
{
  Clomosy.AskAndCall('Are you sure to delete this product?','DeleteProducts','ProcNo');
}*/
{
  UForm=TclStyleForm.Create(Self);
  getId=UForm.AddNewLabel(UForm,'getId','');
  getId.Visible=False;
  getId.Text=Clomosy.GlobalVariableString;
  GetProduct;
  
  updateName=UForm.addNewEdit(UForm,'updateName', 'Ürün adını giriniz: ');
  updateName.Align=alTop;
  updateName.margins.Top=20;
  updateName.Text=Qry.FieldByName('name').AsString;
  
  updateExplanation=UForm.addNewEdit(UForm,'updateExplanation', 'Ürün açıklamasını giriniz: ');
  updateExplanation.Align=alTop;
  updateExplanation.margins.Top=25;
  updateExplanation.Text=Qry.FieldByName('explanation').AsString;
  
  updateQuantity=UForm.addNewEdit(UForm,'updateQuantity', 'Ürün miktarını giriniz: ');
  updateQuantity.Align=alTop;
  updateQuantity.margins.Top=30;
  updateQuantity.Text=Qry.FieldByName('quantity').AsString;
  
  updatePrice=UForm.addNewEdit(UForm,'updatePrice', 'Ürün fiyatını giriniz: ');
  updatePrice.Align=alTop;
  updatePrice.margins.Top=35;
  updatePrice.Text=Qry.FieldByName('price').AsString;
  
  updateCategory_id=UForm.addNewEdit(UForm,'updateCategory_id', 'Ürün kategorisini giriniz: ');
  updateCategory_id.Align=alTop;
  updateCategory_id.margins.Top=40;
  updateCategory_id.Text=Qry.FieldByName('category_id').AsString;
  
  updateSupplier_id=UForm.addNewEdit(UForm,'updateSupplier_id', 'Ürün toptancısını giriniz: ');
  updateSupplier_id.Align=alTop;
  updateSupplier_id.margins.Top=45;
  updateSupplier_id.Text=Qry.FieldByName('supplier_id').AsString;
  
  btnUpdateProduct=UForm.AddNewButton(UForm,'btnUpdateProduct', 'Ürünü Güncelle');
  btnUpdateProduct.Align=alBottom;
  
  btnDeleteProduct=UForm.AddNewButton(UForm,'btnDeleteProduct', 'Ürünü Sil');
  btnDeleteProduct.Align=alBottom;
  btnDeleteProduct.Margins.Bottom=30;

  UForm.AddNewEvent(btnDeleteProduct,tbeOnClick,'DeleteProducts');
  UForm.AddNewEvent(btnUpdateProduct,tbeOnClick,'UpdateProducts');
  UForm.Run;
  
}